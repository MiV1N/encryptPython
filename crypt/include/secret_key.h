
/* Auto-generated by create_key.py */
#define SECRET_NUM 0x16
#define SECRET_KEY_LEN 16
static const unsigned char* GetSecretKey()
{
    unsigned int i = 0;
    static unsigned char key[] = {(0x20 ^ (0x16 - 0)), (0x2C ^ (0x16 - 1)), (0xB9 ^ (0x16 - 2)), (0x62 ^ (0x16 - 3)), (0xAC ^ (0x16 - 4)), (0x59 ^ (0x16 - 5)), (0x7 ^ (0x16 - 6)), (0x5B ^ (0x16 - 7)), (0x96 ^ (0x16 - 8)), (0x4B ^ (0x16 - 9)), (0x7 ^ (0x16 - 10)), (0x15 ^ (0x16 - 11)), (0x2D ^ (0x16 - 12)), (0x23 ^ (0x16 - 13)), (0x4B ^ (0x16 - 14)), (0x70 ^ (0x16 - 15)), 0/* terminal char */};
    static int is_encrypt = 1/*true*/;
    if( is_encrypt )
    {
        for(i = 0 ; i < SECRET_KEY_LEN ; ++i)
        {
            key[i] = key[i] ^ (SECRET_NUM - i);
        }
        is_encrypt = 0/*false*/;
    }
    return key;
}
    